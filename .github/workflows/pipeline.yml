name: Pipeline

on:
  workflow_dispatch:
    inputs:
      PROPERTIES:
        description: 'Properties Version'
        required: true
        default: '1.20'
      tags:
        description: 'Test scenario tags'
env:
  APPLICATION_NAME: app2
jobs:
  lint:
    runs-on: ubuntu-18.04
    steps:
    - uses: actions/checkout@v2

    - name: Setup Python environment
      uses: actions/setup-python@v2.2.2
      with:
        python-version: '3.8'

    - name: Install requirements
      run: pip install --quiet --requirement requirements.txt

    - name: Lint code
      run: |
        flake8 --ignore=E501,E231 *.py

    - name: Run unit tests
      run: |
        python -m unittest --verbose --failfast

  build_image:
    needs: [lint]
    runs-on: ubuntu-18.04
    steps:
    - uses: actions/checkout@v2

    - name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v1

    - name: Build and push
      id: docker_build
      uses: docker/build-push-action@v2
      with:
        context: ./
        file: ./Dockerfile
        push: true
        tags: ${{ secrets.DOCKER_HUB_USERNAME }}/github-test:latest

    - name: Image digest
      run: echo ${{ steps.docker_build.outputs.digest }}
  test_image:
    needs: [build_image]
    runs-on: ubuntu-18.04
    steps:
    - name: Run unit tests in container
      run: docker run "${{ secrets.DOCKER_HUB_USERNAME }}/github-test:latest" -m unittest --verbose --failfast
  test_custom_action:
    runs-on: ubuntu-18.04
    env:
      DAY_OF_WEEK: Mon
      USERNAME: ${{ secrets.DOCKER_HUB_USERNAME }}
      PROPERTIES: ${{github.event.inputs.PROPERTIES}}
      tags: ${{github.event.inputs.tags}}
    environment: 'PRO'
    steps:
    - name: Test Ansible actions
      uses: carlosmrv/ansible-github-actions@main

